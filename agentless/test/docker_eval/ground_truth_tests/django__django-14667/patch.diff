diff --git a/django/db/models/sql/query.py b/django/db/models/sql/query.py
index 8635bf4..9909e8e 100644
--- a/django/db/models/sql/query.py
+++ b/django/db/models/sql/query.py
@@ -2068,7 +2068,7 @@ class Query(BaseExpression):
         """Remove any fields from the deferred loading set."""
         self.deferred_loading = (frozenset(), True)
 
-    def add_deferred_loading(self, field_names):
+    def add_deferred_loading(self, field_names, clear_immediate=True):
         """
         Add the given list of model field names to the set of fields to
         exclude from loading from the database when automatic column selection
@@ -2076,18 +2076,15 @@ class Query(BaseExpression):
         are deferred (or removed from any existing field names that are marked
         as the only ones for immediate loading).
         """
-        # Fields on related models are stored in the literal double-underscore
-        # format, so that we can use a set datastructure. We do the foo__bar
-        # splitting and handling when computing the SQL column names (as part of
-        # get_columns()).
         existing, defer = self.deferred_loading
         if defer:
-            # Add to existing deferred names.
             self.deferred_loading = existing.union(field_names), True
         else:
-            # Remove names from the set of any existing "immediate load" names.
             self.deferred_loading = existing.difference(field_names), False
 
+        if clear_immediate:
+            self.clear_immediate_loading()
+
     def add_immediate_loading(self, field_names):
         """
         Add the given list of model field names to the set of fields to
